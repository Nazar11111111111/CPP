Vagrant.configure("2") do |config|
    config.vm.define("windows") do |windows|
        windows.vm.box = "gusztavvargadr/windows-server"
        windows.vm.boot_timeout = 4000
        windows.vm.communicator = :winssh

        windows.vm.provider(:virtualbox) do |vb|
            vb.name = "windows-server"
        end

        windows.vm.provision(:shell, privileged: false, reboot: true, inline: <<~SCRIPT
            $ProgressPreference = "SilentlyContinue"
            iwr `
                -Uri https://download.visualstudio.microsoft.com/download/pr/93961dfb-d1e0-49c8-9230-abcba1ebab5a/811ed1eb63d7652325727720edda26a8/dotnet-sdk-8.0.100-win-x64.exe `
                -OutFile dotnet.exe
            start dotnet.exe -ArgumentList "/quiet", "/norestart" -Wait
        SCRIPT
        )

        windows.vm.provision(:shell, privileged: false, inline: <<~SCRIPT
            mkdir Tool
            cd Tool
            dotnet new tool-manifest
            dotnet tool install NLeonchuk --add-source http://10.0.2.2:5000/v3/index.json
        SCRIPT
        )
    end

    config.vm.define("linux") do |linux|
        linux.vm.box = "generic/debian11"

        linux.vm.provider(:virtualbox) do |vb|
            vb.name = "debian11"
        end

        linux.vm.provision(:shell, privileged: false, inline: <<~SCRIPT
            wget https://download.visualstudio.microsoft.com/download/pr/5226a5fa-8c0b-474f-b79a-8984ad7c5beb/3113ccbf789c9fd29972835f0f334b7a/dotnet-sdk-8.0.100-linux-x64.tar.gz \
                -O dotnet.tar.gz
            mkdir dotnet
            tar zxf dotnet.tar.gz -C dotnet
            cat > .bashrc << EOL
            export DOTNET_ROOT=~/dotnet
            export PATH=$PATH:~/dotnet
            EOL
            source .bashrc
            mkdir Tool
            cd Tool
            dotnet new tool-manifest
            dotnet tool install NLeonchuk --add-source http://10.0.2.2:5000/v3/index.json
        SCRIPT
        )
    end

    config.vm.define("mac") do |mac|
        mac.vm.box = "tas50/macos_10.15"
        mac.vm.boot_timeout = 4000

        mac.vm.provider(:virtualbox) do |vb|
            vb.name = "macos_10.15"

            vb.customize(["modifyvm", :id, "--cpuidset", "00000001", "000106e5", "00100800", "0098e3fd", "bfebfbff"])
            vb.customize(["setextradata", :id, "VBoxInternal/Devices/efi/0/Config/DmiSystemProduct", "MacBookPro15,1"])
            vb.customize(["setextradata", :id, "VBoxInternal/Devices/efi/0/Config/DmiSystemVersion", "1.0"])
            vb.customize(["setextradata", :id, "VBoxInternal/Devices/efi/0/Config/DmiBoardProduct", "Mac-551B86E5744E2388"])
            vb.customize(["setextradata", :id, "VBoxInternal/Devices/smc/0/Config/DeviceKey", "ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc"])
            vb.customize(["setextradata", :id, "VBoxInternal/Devices/smc/0/Config/GetKeyFromRealSMC", "1"])
        end

        mac.vm.provision(:shell, privileged: false, inline: <<~SCRIPT
            curl https://download.visualstudio.microsoft.com/download/pr/27a7ece8-f6cd-4cab-89cf-987e85ae6805/2c9ab2cb294143b0533f005640c393da/dotnet-sdk-8.0.100-osx-x64.pkg \
                -o dotnet.pkg -L
            sudo installer -pkg dotnet.pkg -target /
            source /etc/profile
            mkdir Tool
            cd Tool
            dotnet new tool-manifest
            dotnet tool install NLeonchuk --add-source http://10.0.2.2:5000/v3/index.json
        SCRIPT
        )

        mac.trigger.after(:"VagrantPlugins::ProviderVirtualBox::Action::Import", type: :action) do |trigger|
            trigger.ruby() do |_, machine|
                driver = machine.provider.driver
                driver.execute_command(["startvm", machine.id, "--type", "headless"])
                sleep(60)
                driver.execute_command(["controlvm", machine.id, "poweroff"])
                driver.execute_command(["modifynvram", machine.id, "queryvar", "--name", "Boot0002", "--filename", "boot"])
                File.open("boot", "r+") do |boot|
                    boot.write([1].pack("L"))
                end
                driver.execute_command(["modifynvram", machine.id, "changevar", "--name", "Boot0002", "--filename", "boot"])
                File.delete("boot")
            end
        end
    end
end